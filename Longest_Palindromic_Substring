class Solution {
public:
    
    int expandfrommiddle(string s,int left,int right)
    {
        if ( s=="" || left>right) return 0;
        while(left>=0 && right<s.length() && s[left]==s[right])
        {
            left--;right++;
        }
        return right-left-1;
        
    }
    
    string longestPalindrome(string s) {
        
        if(s.length()<1)return "";
        
        int start=0;
        int end=0;
        
        for (int i=0;i<s.length();i++)
        {
            int len1=expandfrommiddle(s,i,i);
            int len2=expandfrommiddle(s,i,i+1);
            int len=max(len1,len2);
            if (len>end-start+1)
            {
                start=i-((len-1)/2);
                end=i+(len/2);
            }
        }
        return s.substr(start,end-start+1);
    }
};
